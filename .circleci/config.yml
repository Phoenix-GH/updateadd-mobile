aliases:
  - &yarn-install |
    yarn install

  - &restore-node-cache
    keys:
      - node-{{ .Branch }}-{{ checksum "package.json" }}
      - node-{{ .Branch }}
      - node-

  - &restore-yarn-cache
    keys:
      - yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - yarn-{{ .Branch }}
      - yarn-

  - &save-yarn-cache
    paths:
      - ~/.cache/yarn
    key: yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}

  - &save-node-cache
    paths:
      - node_modules
    key: node-{{ .Branch }}-{{ checksum "package.json" }}

version: 2.1
defaults: &defaults
  working_directory: ~/repo
  # macos:
  #   xcode: "10.2.0"
  docker:
    - image: circleci/node:10.10.0
jobs:
  install:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp

      - run:
          name: Download cc-test-reporter
          command: |
            mkdir -p /tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /tmp/cc-test-reporter
            # curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-darwin-amd64 > /tmp/cc-test-reporter
            chmod +x /tmp/cc-test-reporter

      - persist_to_workspace:
          root: /tmp
          paths:
            - cc-test-reporter

  test:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: /tmp

      - restore_cache: *restore-yarn-cache
      - restore_cache: *restore-node-cache
      - run:
          name: Install dependencies
          command: *yarn-install
      - save_cache: *save-yarn-cache
      - save_cache: *save-node-cache

      - run:
          name: Run lint
          command: |
            yarn lint

      - run:
          name: Run flow
          command: |
            yarn flow

      - run:
          name: Run coverage
          command: |
            yarn coverage --runInBand
            /tmp/cc-test-reporter format-coverage coverage/lcov.info -t lcov -o /tmp/coverage.json

      - persist_to_workspace:
          root: /tmp/
          paths:
            - coverage.json

  upload-coverage:
      <<: *defaults
      environment:
        - CC_TEST_REPORTER_ID: "<token here>"

      steps:
        - attach_workspace:
            at: /tmp

        - run:
            name: Upload coverage results to Code Climate
            command: |
              /tmp/cc-test-reporter upload-coverage -i /tmp/coverage.json

  visual-regression-test:
    <<: *defaults
    steps:
      - checkout

      - restore_cache: *restore-yarn-cache
      - restore_cache: *restore-node-cache
      - run:
          name: Install dependencies
          command: *yarn-install
      - save_cache: *save-yarn-cache
      - save_cache: *save-node-cache

      - run:
          name: Pre-start iPhone Xs Max simulator
          command: |
            xcrun instruments -w "iPhone Xs Max (12.2) [" -t "Blank" || true

      - run:
          name: Install Google Chrome
          command: |
            brew update
            brew cask install google-chrome

      - run: 
          name: Install react-native command line tools
          command: |
            sudo npm install -g react-native-cli

      - run:
          name: Run Storybook server, install app to simulator, Loki snapshotting, visual regression test
          command: |
            sudo chown -R $USER:$GROUP ~/.config
            yarn storybook & react-native run-ios --simulator "iPhone Xs Max"
            sleep 300
            yarn loki update
            yarn regression
          no_output_timeout: 2h

workflows:
  version: 2
  commit:
    jobs:
      - install
      - test:
          requires:
            - install
      - upload-coverage:
          requires:
            - test
      # - visual-regression-test